# this is internal
server {
    listen  80 ;
    listen 443 ssl;
    server_name mobile.dev localhost;

    access_log  /var/log/casumo_nginx main;
    error_log /var/log/casumo_nginx_error debug;

    ssl_certificate /etc/nginx/ssl-certificates/mobile.dev.crt;
    ssl_certificate_key /etc/nginx/ssl-certificates/mobile.dev.key;

    # Payments (resolver needed for payments upstream)
    resolver 192.168.50.88;
    set $payments_upstream "http://payments-reverse-proxy.at.casumotest.local:8080";

    root /var/www/mobile/mobile/build/www;

    location / {
        try_files $uri /index.html;
    }

    # Over here we had to remove the `js|css|json` extensions since they are
    # requested over the `/react-stack` route. Suggestions on how we can work with /
    # around this needed.
    location ~ \.(xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|woff2|eot|tff)$ {
        try_files $uri =404;
    }

    # This is where the react app bundle is served. Meaning that from the mobile
    # app, one could just inject the main script to kickstart the whole react
    # app process within the mobile app.
    #
    # It could look something like this, but most probably this would need to be
    # done asynchronously:
    # ```
    # <script src="https://mobile.dev/react-stack/js/bundle.js"></scirpt>
    # ```
    location /react-stack/ {
        proxy_pass http://mobile-react-stack:3000/react-stack/;
    }

    # This is needed by the react stack to enable HMR during development time.
    # This will need to be omitted when we build for production.
    location ~ ^/(.*)\.hot-update\.js$ {
        proxy_pass http://mobile-react-stack:3000/$1.hot-update.js;
        proxy_redirect  off;
    }

    # This is needed by the react stack to enable HMR during development time.
    # This will need to be omitted when we build for production.
    location ~ ^/(.*)\.hot-update\.json$ {
        proxy_pass http://mobile-react-stack:3000/$1.hot-update.json;
        proxy_redirect  off;
    }

    # This is needed by the react stack to enable HMR during development time.
    # This will need to be omitted when we build for production.
    location /sockjs-node/ {
        proxy_pass http://mobile-react-stack:3000/sockjs-node/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 7200000ms;
    }

    # Here we have a specific route that will handle the API gateway for any
    # calls that happen within the new stack. Strictly speaking this could be
    # omitted, and we can still rely on the `/api/` routes. At the same time it
    # is going to be left here to give us an option in case we would want to
    # augment or create different endpoints.
    location /api-gw/api/ {
        proxy_pass http://common.at.casumotest.local:8080/api/;
        proxy_redirect  off;
    }

    location /api-gw/api/gamebrowser/ {
        proxy_pass http://game-browser.at.casumotest.local:8080/api/;
        proxy_redirect  off;
    }

    # CometD
    location /cometd/ {
        proxy_pass http://common.dev/cometd/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 7200000ms;
    }

    # Common
    location /api/ {
        proxy_pass http://common.dev/api/;
    }

    # Registration
    location ^~ /utils/registration {
        proxy_pass http://logged-out-state-registration.dev/utils/registration/;
    }

    # GameBrowser
    location /api/gamebrowser/ {
        proxy_pass http://game-browser.dev/api/;
    }

    # Live Casino Lobby websocket
    location /api/lobby/live {
        proxy_pass https://uat1-casumo.evolutiongaming.com/api/lobby/v1/casumo0000000001/live;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /api/loginhistory/ {
        proxy_pass http://player-login-history.dev/;
    }

    location /api/compliance/ {
        proxy_pass http://compliance-gateway.dev/;
    }

    location ~ ^/paymentiq/api/([a-z]+)/(deposit|withdrawal)/process/$ {
        proxy_pass $payments_upstream/paymentiq/api/$1/$2/process/$is_args$args;
        proxy_redirect  off;
    }

    location ~ ^/paymentiq/api/([a-z]+)/deposit/redirect(.*)$ {
        proxy_pass $payments_upstream/paymentiq/api/$1/deposit/redirect$2$is_args$args;
        proxy_redirect  off;
    }

    location ~ ^/paymentiq/api/creditcard/deposit/callback$ {
        proxy_pass $payments_upstream/paymentiq/api/creditcard/deposit/callback$is_args$args;
        proxy_redirect  off;
    }

    location ~ ^/paymentiq/api/user/account/([0-9]+)/([0-9a-z\-]+)/(.*)$ {
        proxy_pass $payments_upstream/paymentiq/api/user/account/$1/$2/$3$is_args$args;
        proxy_redirect  off;
    }

    location ~ ^/paymentiq/api/paysafecard/deposit/finalize$ {
        proxy_pass $payments_upstream/paymentiq/api/paysafecard/deposit/finalize$is_args$args;
        proxy_redirect  off;
    }

    location ~ ^/paymentiq/api/entercash/redirect(.*)$ {
        proxy_pass $payments_upstream/paymentiq/api/entercash/redirect$1$is_args$args;
        proxy_redirect  off;
    }

    location ~ ^/paymentiq/api/worldpayhcg/callback$ {
        proxy_pass $payments_upstream/paymentiq/api/worldpayhcg/callback$is_args$args;
        proxy_redirect  off;
    }

    location ~ ^/paymentiq/api/pugglepay/deposit/process/auth(.*)$ {
        proxy_pass $payments_upstream/paymentiq/api/pugglepay/deposit/process/auth$1$is_args$args;
        proxy_redirect  off;
    }

    location /paymentiq/api/user/transaction {
        proxy_pass $payments_upstream/paymentiq/api/user/transaction;
        proxy_redirect  off;
    }

    location /paymentiq/api/user/account {
        proxy_pass $payments_upstream/paymentiq/api/user/account;
        proxy_redirect  off;
    }
}
